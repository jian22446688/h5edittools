{"version":3,"sources":["webpack:///./node_modules/@xkeshi/vue-qrcode/dist/vue-qrcode.js","webpack:///src/components/modals/PreviewSetModal.vue","webpack:///./src/components/modals/PreviewSetModal.vue?cf89","webpack:///./src/components/modals/PreviewSetModal.vue"],"names":["global","factory","window","self","module","qrious","exports","Constructor","hasOwnProperty","Object","prototype","slice","Array","extendObject","own","target","sources","property","source","i","length","call","arguments","extend_1","name","constructor","statics","superConstructor","this","apply","properties","result","create","createObject","class_","super_","Nevis","extend","lite","Renderer_1","element","enabled","Boolean","draw","frame","getElement","render","getModuleSize","padding","pixels","Math","floor","size","width","max","getOffset","moduleSize","offset","resize","reset","CanvasRenderer_1","j","context","getContext","fillStyle","foreground","globalAlpha","foregroundAlpha","buffer","fillRect","lineWidth","clearRect","background","backgroundAlpha","height","Alignment_1","BLOCK","ErrorCorrection_1","BLOCKS","FINAL_FORMAT","LEVELS","L","M","Q","H","Galois_1","EXPONENT","LOG","Version_1","Frame","options","dataBlock","eccBlock","index","neccBlock1","neccBlock2","valueLength","value","_badness","_level","level","_polynomial","_value","_version","_stringBuffer","_dataBlock","_eccBlock","_neccBlock1","_neccBlock2","_createArray","_ecc","_mask","_insertFinders","_insertAlignments","_insertTimingGap","_reverseMask","_insertTimingRowAndColumn","_insertVersion","_syncMask","_convertBitStream","_calculatePolynomial","_appendEccToData","_interleaveBlocks","_pack","_finish","_addAlignment","x","y","_setMask","_appendData","data","dataLength","ecc","eccLength","bit","polynomial","stringBuffer","_modN","_calculateMaxLength","_applyMask","mask","r3x","r3y","_isMasked","_checkBadness","b","b1","h","bad","badness","N2","bw","_getBadness","count","big","N4","version","charCodeAt","maxLength","badRuns","N1","N3","currentMask","k","_getMaskBit","v","array","Frame_1","ImageRenderer_1","src","toDataURL","Option_1","modifiable","defaultValue","valueTransformer","_valueTransformer","transform","transformer","Utilities_1","abs","hasOwn","object","noop","toUpperCase","string","OptionManager","forEach","option","exists","get","_get","getAll","init","changeHandler","_set","_createAccessor","_setAll","set","setAll","allowUnmodifiable","Error","changed","descriptor","defineProperty","fieldName","oldValue","newValue","OptionManager_1","ServiceManager_1","_services","getService","service","setService","optionManager","serviceManager","QRious","update","bind","elementService","canvas","isCanvas","createCanvas","image","isImage","createImage","_canvasRenderer","_imageRenderer","mime","use","getName","defineProperties","BrowserElementService_1","document","createElement","HTMLCanvasElement","HTMLImageElement","fn","props","type","String","required","tag","default","$slots","watch","generate","mounted","methods","assign","$el","PreviewSetModal","qrcode","vue_qrcode_default","a","title","des","qurl","preview","val","userinfo","themebg","_id","visible","select","url","_this","theme","_this2","_this3","show","hide","_this4","useTheme","modals_PreviewSetModal","_vm","_h","$createElement","_c","_self","attrs","mask-closable","footerHide","on","on-visible-change","onVisibleChange","model","callback","$$v","modal_preView","expression","_v","staticStyle","margin-top","margin-bottom","span","staticClass","qrcodeAdderss","frameborder","text-align","shape","readonly","getStatusEdit","placeholder","$set","autosize","minRows","maxRows","baseHost","alt","_e","multiple","action","uploadUrl","show-upload-list","max-size","on-success","handleSuccess","on-format-error","handleFormatError","on-exceeded-size","handleMaxSize","icon","id","line-height","click","onCopyEvent","$route","path","onSave","onToEditor","status","onToBuild","onToDownload","onUseTemplate","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/0.58ebad74fb0ad6b8d802.js","sourcesContent":["/*!\n * vue-qrcode v0.3.0\n * https://github.com/xkeshi/vue-qrcode\n *\n * Copyright (c) 2017 Xkeshi\n * Released under the MIT license\n *\n * Date: 2017-09-25T07:50:15.977Z\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.VueQrcode = factory());\n}(this, (function () { 'use strict';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar qrious = createCommonjsModule(function (module, exports) {\n/*\n * QRious v4.0.2\n * Copyright (C) 2017 Alasdair Mercer\n * Copyright (C) 2010 Tom Zerucha\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n(function (global, factory) {\n  module.exports = factory();\n}(commonjsGlobal, (function () { 'use strict';\n\n  /*\n   * Copyright (C) 2017 Alasdair Mercer, !ninja\n   *\n   * Permission is hereby granted, free of charge, to any person obtaining a copy\n   * of this software and associated documentation files (the \"Software\"), to deal\n   * in the Software without restriction, including without limitation the rights\n   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n   * copies of the Software, and to permit persons to whom the Software is\n   * furnished to do so, subject to the following conditions:\n   *\n   * The above copyright notice and this permission notice shall be included in all\n   * copies or substantial portions of the Software.\n   *\n   * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n   * SOFTWARE.\n   */\n\n  /**\n   * A bare-bones constructor for surrogate prototype swapping.\n   *\n   * @private\n   * @constructor\n   */\n  var Constructor = /* istanbul ignore next */ function() {};\n  /**\n   * A reference to <code>Object.prototype.hasOwnProperty</code>.\n   *\n   * @private\n   * @type {Function}\n   */\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * A reference to <code>Array.prototype.slice</code>.\n   *\n   * @private\n   * @type {Function}\n   */\n  var slice = Array.prototype.slice;\n\n  /**\n   * Creates an object which inherits the given <code>prototype</code>.\n   *\n   * Optionally, the created object can be extended further with the specified <code>properties</code>.\n   *\n   * @param {Object} prototype - the prototype to be inherited by the created object\n   * @param {Object} [properties] - the optional properties to be extended by the created object\n   * @return {Object} The newly created object.\n   * @private\n   */\n  function createObject(prototype, properties) {\n    var result;\n    /* istanbul ignore next */\n    if (typeof Object.create === 'function') {\n      result = Object.create(prototype);\n    } else {\n      Constructor.prototype = prototype;\n      result = new Constructor();\n      Constructor.prototype = null;\n    }\n\n    if (properties) {\n      extendObject(true, result, properties);\n    }\n\n    return result;\n  }\n\n  /**\n   * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n   * <code>statics</code> provided.\n   *\n   * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n   * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n   * instead. The class name may also be used string representation for instances of the child constructor (via\n   * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n   *\n   * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n   * constructor which only calls the super constructor will be used instead.\n   *\n   * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n   *\n   * @param {string} [name=this.class_] - the class name to be used for the child constructor\n   * @param {Function} [constructor] - the constructor for the child\n   * @param {Object} [prototype] - the prototype properties to be defined for the child\n   * @param {Object} [statics] - the static properties to be defined for the child\n   * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n   * @public\n   */\n  function extend(name, constructor, prototype, statics) {\n    var superConstructor = this;\n\n    if (typeof name !== 'string') {\n      statics = prototype;\n      prototype = constructor;\n      constructor = name;\n      name = null;\n    }\n\n    if (typeof constructor !== 'function') {\n      statics = prototype;\n      prototype = constructor;\n      constructor = function() {\n        return superConstructor.apply(this, arguments);\n      };\n    }\n\n    extendObject(false, constructor, superConstructor, statics);\n\n    constructor.prototype = createObject(superConstructor.prototype, prototype);\n    constructor.prototype.constructor = constructor;\n\n    constructor.class_ = name || superConstructor.class_;\n    constructor.super_ = superConstructor;\n\n    return constructor;\n  }\n\n  /**\n   * Extends the specified <code>target</code> object with the properties in each of the <code>sources</code> provided.\n   *\n   * if any source is <code>null</code> it will be ignored.\n   *\n   * @param {boolean} own - <code>true</code> to only copy <b>own</b> properties from <code>sources</code> onto\n   * <code>target</code>; otherwise <code>false</code>\n   * @param {Object} target - the target object which should be extended\n   * @param {...Object} [sources] - the source objects whose properties are to be copied onto <code>target</code>\n   * @return {void}\n   * @private\n   */\n  function extendObject(own, target, sources) {\n    sources = slice.call(arguments, 2);\n\n    var property;\n    var source;\n\n    for (var i = 0, length = sources.length; i < length; i++) {\n      source = sources[i];\n\n      for (property in source) {\n        if (!own || hasOwnProperty.call(source, property)) {\n          target[property] = source[property];\n        }\n      }\n    }\n  }\n\n  var extend_1 = extend;\n\n  /**\n   * The base class from which all others should extend.\n   *\n   * @public\n   * @constructor\n   */\n  function Nevis() {}\n  Nevis.class_ = 'Nevis';\n  Nevis.super_ = Object;\n\n  /**\n   * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n   * <code>statics</code> provided.\n   *\n   * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n   * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n   * instead. The class name may also be used string representation for instances of the child constructor (via\n   * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n   *\n   * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n   * constructor which only calls the super constructor will be used instead.\n   *\n   * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n   *\n   * @param {string} [name=this.class_] - the class name to be used for the child constructor\n   * @param {Function} [constructor] - the constructor for the child\n   * @param {Object} [prototype] - the prototype properties to be defined for the child\n   * @param {Object} [statics] - the static properties to be defined for the child\n   * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n   * @public\n   * @static\n   * @memberof Nevis\n   */\n  Nevis.extend = extend_1;\n\n  var nevis = Nevis;\n\n  var lite = nevis;\n\n  /**\n   * Responsible for rendering a QR code {@link Frame} on a specific type of element.\n   *\n   * A renderer may be dependant on the rendering of another element, so the ordering of their execution is important.\n   *\n   * The rendering of a element can be deferred by disabling the renderer initially, however, any attempt get the element\n   * from the renderer will result in it being immediately enabled and the element being rendered.\n   *\n   * @param {QRious} qrious - the {@link QRious} instance to be used\n   * @param {*} element - the element onto which the QR code is to be rendered\n   * @param {boolean} [enabled] - <code>true</code> this {@link Renderer} is enabled; otherwise <code>false</code>.\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Renderer = lite.extend(function(qrious, element, enabled) {\n    /**\n     * The {@link QRious} instance.\n     *\n     * @protected\n     * @type {QRious}\n     * @memberof Renderer#\n     */\n    this.qrious = qrious;\n\n    /**\n     * The element onto which this {@link Renderer} is rendering the QR code.\n     *\n     * @protected\n     * @type {*}\n     * @memberof Renderer#\n     */\n    this.element = element;\n    this.element.qrious = qrious;\n\n    /**\n     * Whether this {@link Renderer} is enabled.\n     *\n     * @protected\n     * @type {boolean}\n     * @memberof Renderer#\n     */\n    this.enabled = Boolean(enabled);\n  }, {\n\n    /**\n     * Draws the specified QR code <code>frame</code> on the underlying element.\n     *\n     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n     *\n     * @param {Frame} frame - the {@link Frame} to be drawn\n     * @return {void}\n     * @protected\n     * @abstract\n     * @memberof Renderer#\n     */\n    draw: function(frame) {},\n\n    /**\n     * Returns the element onto which this {@link Renderer} is rendering the QR code.\n     *\n     * If this method is called while this {@link Renderer} is disabled, it will be immediately enabled and rendered\n     * before the element is returned.\n     *\n     * @return {*} The element.\n     * @public\n     * @memberof Renderer#\n     */\n    getElement: function() {\n      if (!this.enabled) {\n        this.enabled = true;\n        this.render();\n      }\n\n      return this.element;\n    },\n\n    /**\n     * Calculates the size (in pixel units) to represent an individual module within the QR code based on the\n     * <code>frame</code> provided.\n     *\n     * Any configured padding will be excluded from the returned size.\n     *\n     * The returned value will be at least one, even in cases where the size of the QR code does not fit its contents.\n     * This is done so that the inevitable clipping is handled more gracefully since this way at least something is\n     * displayed instead of just a blank space filled by the background color.\n     *\n     * @param {Frame} frame - the {@link Frame} from which the module size is to be derived\n     * @return {number} The pixel size for each module in the QR code which will be no less than one.\n     * @protected\n     * @memberof Renderer#\n     */\n    getModuleSize: function(frame) {\n      var qrious = this.qrious;\n      var padding = qrious.padding || 0;\n      var pixels = Math.floor((qrious.size - (padding * 2)) / frame.width);\n\n      return Math.max(1, pixels);\n    },\n\n    /**\n     * Calculates the offset/padding (in pixel units) to be inserted before the QR code based on the <code>frame</code>\n     * provided.\n     *\n     * The returned value will be zero if there is no available offset or if the size of the QR code does not fit its\n     * contents. It will never be a negative value. This is done so that the inevitable clipping appears more naturally\n     * and it is not clipped from all directions.\n     *\n     * @param {Frame} frame - the {@link Frame} from which the offset is to be derived\n     * @return {number} The pixel offset for the QR code which will be no less than zero.\n     * @protected\n     * @memberof Renderer#\n     */\n    getOffset: function(frame) {\n      var qrious = this.qrious;\n      var padding = qrious.padding;\n\n      if (padding != null) {\n        return padding;\n      }\n\n      var moduleSize = this.getModuleSize(frame);\n      var offset = Math.floor((qrious.size - (moduleSize * frame.width)) / 2);\n\n      return Math.max(0, offset);\n    },\n\n    /**\n     * Renders a QR code on the underlying element based on the <code>frame</code> provided.\n     *\n     * @param {Frame} frame - the {@link Frame} to be rendered\n     * @return {void}\n     * @public\n     * @memberof Renderer#\n     */\n    render: function(frame) {\n      if (this.enabled) {\n        this.resize();\n        this.reset();\n        this.draw(frame);\n      }\n    },\n\n    /**\n     * Resets the underlying element, effectively clearing any previously rendered QR code.\n     *\n     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {void}\n     * @protected\n     * @abstract\n     * @memberof Renderer#\n     */\n    reset: function() {},\n\n    /**\n     * Ensures that the size of the underlying element matches that defined on the associated {@link QRious} instance.\n     *\n     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {void}\n     * @protected\n     * @abstract\n     * @memberof Renderer#\n     */\n    resize: function() {}\n\n  });\n\n  var Renderer_1 = Renderer;\n\n  /**\n   * An implementation of {@link Renderer} for working with <code>canvas</code> elements.\n   *\n   * @public\n   * @class\n   * @extends Renderer\n   */\n  var CanvasRenderer = Renderer_1.extend({\n\n    /**\n     * @override\n     */\n    draw: function(frame) {\n      var i, j;\n      var qrious = this.qrious;\n      var moduleSize = this.getModuleSize(frame);\n      var offset = this.getOffset(frame);\n      var context = this.element.getContext('2d');\n\n      context.fillStyle = qrious.foreground;\n      context.globalAlpha = qrious.foregroundAlpha;\n\n      for (i = 0; i < frame.width; i++) {\n        for (j = 0; j < frame.width; j++) {\n          if (frame.buffer[(j * frame.width) + i]) {\n            context.fillRect((moduleSize * i) + offset, (moduleSize * j) + offset, moduleSize, moduleSize);\n          }\n        }\n      }\n    },\n\n    /**\n     * @override\n     */\n    reset: function() {\n      var qrious = this.qrious;\n      var context = this.element.getContext('2d');\n      var size = qrious.size;\n\n      context.lineWidth = 1;\n      context.clearRect(0, 0, size, size);\n      context.fillStyle = qrious.background;\n      context.globalAlpha = qrious.backgroundAlpha;\n      context.fillRect(0, 0, size, size);\n    },\n\n    /**\n     * @override\n     */\n    resize: function() {\n      var element = this.element;\n\n      element.width = element.height = this.qrious.size;\n    }\n\n  });\n\n  var CanvasRenderer_1 = CanvasRenderer;\n\n  /* eslint no-multi-spaces: \"off\" */\n\n\n\n  /**\n   * Contains alignment pattern information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Alignment = lite.extend(null, {\n\n    /**\n     * The alignment pattern block.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Alignment\n     */\n    BLOCK: [\n      0,  11, 15, 19, 23, 27, 31,\n      16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24,\n      26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28\n    ]\n\n  });\n\n  var Alignment_1 = Alignment;\n\n  /* eslint no-multi-spaces: \"off\" */\n\n\n\n  /**\n   * Contains error correction information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var ErrorCorrection = lite.extend(null, {\n\n    /**\n     * The error correction blocks.\n     *\n     * There are four elements per version. The first two indicate the number of blocks, then the data width, and finally\n     * the ECC width.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof ErrorCorrection\n     */\n    BLOCKS: [\n      1,  0,  19,  7,     1,  0,  16,  10,    1,  0,  13,  13,    1,  0,  9,   17,\n      1,  0,  34,  10,    1,  0,  28,  16,    1,  0,  22,  22,    1,  0,  16,  28,\n      1,  0,  55,  15,    1,  0,  44,  26,    2,  0,  17,  18,    2,  0,  13,  22,\n      1,  0,  80,  20,    2,  0,  32,  18,    2,  0,  24,  26,    4,  0,  9,   16,\n      1,  0,  108, 26,    2,  0,  43,  24,    2,  2,  15,  18,    2,  2,  11,  22,\n      2,  0,  68,  18,    4,  0,  27,  16,    4,  0,  19,  24,    4,  0,  15,  28,\n      2,  0,  78,  20,    4,  0,  31,  18,    2,  4,  14,  18,    4,  1,  13,  26,\n      2,  0,  97,  24,    2,  2,  38,  22,    4,  2,  18,  22,    4,  2,  14,  26,\n      2,  0,  116, 30,    3,  2,  36,  22,    4,  4,  16,  20,    4,  4,  12,  24,\n      2,  2,  68,  18,    4,  1,  43,  26,    6,  2,  19,  24,    6,  2,  15,  28,\n      4,  0,  81,  20,    1,  4,  50,  30,    4,  4,  22,  28,    3,  8,  12,  24,\n      2,  2,  92,  24,    6,  2,  36,  22,    4,  6,  20,  26,    7,  4,  14,  28,\n      4,  0,  107, 26,    8,  1,  37,  22,    8,  4,  20,  24,    12, 4,  11,  22,\n      3,  1,  115, 30,    4,  5,  40,  24,    11, 5,  16,  20,    11, 5,  12,  24,\n      5,  1,  87,  22,    5,  5,  41,  24,    5,  7,  24,  30,    11, 7,  12,  24,\n      5,  1,  98,  24,    7,  3,  45,  28,    15, 2,  19,  24,    3,  13, 15,  30,\n      1,  5,  107, 28,    10, 1,  46,  28,    1,  15, 22,  28,    2,  17, 14,  28,\n      5,  1,  120, 30,    9,  4,  43,  26,    17, 1,  22,  28,    2,  19, 14,  28,\n      3,  4,  113, 28,    3,  11, 44,  26,    17, 4,  21,  26,    9,  16, 13,  26,\n      3,  5,  107, 28,    3,  13, 41,  26,    15, 5,  24,  30,    15, 10, 15,  28,\n      4,  4,  116, 28,    17, 0,  42,  26,    17, 6,  22,  28,    19, 6,  16,  30,\n      2,  7,  111, 28,    17, 0,  46,  28,    7,  16, 24,  30,    34, 0,  13,  24,\n      4,  5,  121, 30,    4,  14, 47,  28,    11, 14, 24,  30,    16, 14, 15,  30,\n      6,  4,  117, 30,    6,  14, 45,  28,    11, 16, 24,  30,    30, 2,  16,  30,\n      8,  4,  106, 26,    8,  13, 47,  28,    7,  22, 24,  30,    22, 13, 15,  30,\n      10, 2,  114, 28,    19, 4,  46,  28,    28, 6,  22,  28,    33, 4,  16,  30,\n      8,  4,  122, 30,    22, 3,  45,  28,    8,  26, 23,  30,    12, 28, 15,  30,\n      3,  10, 117, 30,    3,  23, 45,  28,    4,  31, 24,  30,    11, 31, 15,  30,\n      7,  7,  116, 30,    21, 7,  45,  28,    1,  37, 23,  30,    19, 26, 15,  30,\n      5,  10, 115, 30,    19, 10, 47,  28,    15, 25, 24,  30,    23, 25, 15,  30,\n      13, 3,  115, 30,    2,  29, 46,  28,    42, 1,  24,  30,    23, 28, 15,  30,\n      17, 0,  115, 30,    10, 23, 46,  28,    10, 35, 24,  30,    19, 35, 15,  30,\n      17, 1,  115, 30,    14, 21, 46,  28,    29, 19, 24,  30,    11, 46, 15,  30,\n      13, 6,  115, 30,    14, 23, 46,  28,    44, 7,  24,  30,    59, 1,  16,  30,\n      12, 7,  121, 30,    12, 26, 47,  28,    39, 14, 24,  30,    22, 41, 15,  30,\n      6,  14, 121, 30,    6,  34, 47,  28,    46, 10, 24,  30,    2,  64, 15,  30,\n      17, 4,  122, 30,    29, 14, 46,  28,    49, 10, 24,  30,    24, 46, 15,  30,\n      4,  18, 122, 30,    13, 32, 46,  28,    48, 14, 24,  30,    42, 32, 15,  30,\n      20, 4,  117, 30,    40, 7,  47,  28,    43, 22, 24,  30,    10, 67, 15,  30,\n      19, 6,  118, 30,    18, 31, 47,  28,    34, 34, 24,  30,    20, 61, 15,  30\n    ],\n\n    /**\n     * The final format bits with mask (level << 3 | mask).\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof ErrorCorrection\n     */\n    FINAL_FORMAT: [\n      // L\n      0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976,\n      // M\n      0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0,\n      // Q\n      0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed,\n      // H\n      0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b\n    ],\n\n    /**\n     * A map of human-readable ECC levels.\n     *\n     * @public\n     * @static\n     * @type {Object.<string, number>}\n     * @memberof ErrorCorrection\n     */\n    LEVELS: {\n      L: 1,\n      M: 2,\n      Q: 3,\n      H: 4\n    }\n\n  });\n\n  var ErrorCorrection_1 = ErrorCorrection;\n\n  /**\n   * Contains Galois field information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Galois = lite.extend(null, {\n\n    /**\n     * The Galois field exponent table.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Galois\n     */\n    EXPONENT: [\n      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1d, 0x3a, 0x74, 0xe8, 0xcd, 0x87, 0x13, 0x26,\n      0x4c, 0x98, 0x2d, 0x5a, 0xb4, 0x75, 0xea, 0xc9, 0x8f, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0,\n      0x9d, 0x27, 0x4e, 0x9c, 0x25, 0x4a, 0x94, 0x35, 0x6a, 0xd4, 0xb5, 0x77, 0xee, 0xc1, 0x9f, 0x23,\n      0x46, 0x8c, 0x05, 0x0a, 0x14, 0x28, 0x50, 0xa0, 0x5d, 0xba, 0x69, 0xd2, 0xb9, 0x6f, 0xde, 0xa1,\n      0x5f, 0xbe, 0x61, 0xc2, 0x99, 0x2f, 0x5e, 0xbc, 0x65, 0xca, 0x89, 0x0f, 0x1e, 0x3c, 0x78, 0xf0,\n      0xfd, 0xe7, 0xd3, 0xbb, 0x6b, 0xd6, 0xb1, 0x7f, 0xfe, 0xe1, 0xdf, 0xa3, 0x5b, 0xb6, 0x71, 0xe2,\n      0xd9, 0xaf, 0x43, 0x86, 0x11, 0x22, 0x44, 0x88, 0x0d, 0x1a, 0x34, 0x68, 0xd0, 0xbd, 0x67, 0xce,\n      0x81, 0x1f, 0x3e, 0x7c, 0xf8, 0xed, 0xc7, 0x93, 0x3b, 0x76, 0xec, 0xc5, 0x97, 0x33, 0x66, 0xcc,\n      0x85, 0x17, 0x2e, 0x5c, 0xb8, 0x6d, 0xda, 0xa9, 0x4f, 0x9e, 0x21, 0x42, 0x84, 0x15, 0x2a, 0x54,\n      0xa8, 0x4d, 0x9a, 0x29, 0x52, 0xa4, 0x55, 0xaa, 0x49, 0x92, 0x39, 0x72, 0xe4, 0xd5, 0xb7, 0x73,\n      0xe6, 0xd1, 0xbf, 0x63, 0xc6, 0x91, 0x3f, 0x7e, 0xfc, 0xe5, 0xd7, 0xb3, 0x7b, 0xf6, 0xf1, 0xff,\n      0xe3, 0xdb, 0xab, 0x4b, 0x96, 0x31, 0x62, 0xc4, 0x95, 0x37, 0x6e, 0xdc, 0xa5, 0x57, 0xae, 0x41,\n      0x82, 0x19, 0x32, 0x64, 0xc8, 0x8d, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xdd, 0xa7, 0x53, 0xa6,\n      0x51, 0xa2, 0x59, 0xb2, 0x79, 0xf2, 0xf9, 0xef, 0xc3, 0x9b, 0x2b, 0x56, 0xac, 0x45, 0x8a, 0x09,\n      0x12, 0x24, 0x48, 0x90, 0x3d, 0x7a, 0xf4, 0xf5, 0xf7, 0xf3, 0xfb, 0xeb, 0xcb, 0x8b, 0x0b, 0x16,\n      0x2c, 0x58, 0xb0, 0x7d, 0xfa, 0xe9, 0xcf, 0x83, 0x1b, 0x36, 0x6c, 0xd8, 0xad, 0x47, 0x8e, 0x00\n    ],\n\n    /**\n     * The Galois field log table.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Galois\n     */\n    LOG: [\n      0xff, 0x00, 0x01, 0x19, 0x02, 0x32, 0x1a, 0xc6, 0x03, 0xdf, 0x33, 0xee, 0x1b, 0x68, 0xc7, 0x4b,\n      0x04, 0x64, 0xe0, 0x0e, 0x34, 0x8d, 0xef, 0x81, 0x1c, 0xc1, 0x69, 0xf8, 0xc8, 0x08, 0x4c, 0x71,\n      0x05, 0x8a, 0x65, 0x2f, 0xe1, 0x24, 0x0f, 0x21, 0x35, 0x93, 0x8e, 0xda, 0xf0, 0x12, 0x82, 0x45,\n      0x1d, 0xb5, 0xc2, 0x7d, 0x6a, 0x27, 0xf9, 0xb9, 0xc9, 0x9a, 0x09, 0x78, 0x4d, 0xe4, 0x72, 0xa6,\n      0x06, 0xbf, 0x8b, 0x62, 0x66, 0xdd, 0x30, 0xfd, 0xe2, 0x98, 0x25, 0xb3, 0x10, 0x91, 0x22, 0x88,\n      0x36, 0xd0, 0x94, 0xce, 0x8f, 0x96, 0xdb, 0xbd, 0xf1, 0xd2, 0x13, 0x5c, 0x83, 0x38, 0x46, 0x40,\n      0x1e, 0x42, 0xb6, 0xa3, 0xc3, 0x48, 0x7e, 0x6e, 0x6b, 0x3a, 0x28, 0x54, 0xfa, 0x85, 0xba, 0x3d,\n      0xca, 0x5e, 0x9b, 0x9f, 0x0a, 0x15, 0x79, 0x2b, 0x4e, 0xd4, 0xe5, 0xac, 0x73, 0xf3, 0xa7, 0x57,\n      0x07, 0x70, 0xc0, 0xf7, 0x8c, 0x80, 0x63, 0x0d, 0x67, 0x4a, 0xde, 0xed, 0x31, 0xc5, 0xfe, 0x18,\n      0xe3, 0xa5, 0x99, 0x77, 0x26, 0xb8, 0xb4, 0x7c, 0x11, 0x44, 0x92, 0xd9, 0x23, 0x20, 0x89, 0x2e,\n      0x37, 0x3f, 0xd1, 0x5b, 0x95, 0xbc, 0xcf, 0xcd, 0x90, 0x87, 0x97, 0xb2, 0xdc, 0xfc, 0xbe, 0x61,\n      0xf2, 0x56, 0xd3, 0xab, 0x14, 0x2a, 0x5d, 0x9e, 0x84, 0x3c, 0x39, 0x53, 0x47, 0x6d, 0x41, 0xa2,\n      0x1f, 0x2d, 0x43, 0xd8, 0xb7, 0x7b, 0xa4, 0x76, 0xc4, 0x17, 0x49, 0xec, 0x7f, 0x0c, 0x6f, 0xf6,\n      0x6c, 0xa1, 0x3b, 0x52, 0x29, 0x9d, 0x55, 0xaa, 0xfb, 0x60, 0x86, 0xb1, 0xbb, 0xcc, 0x3e, 0x5a,\n      0xcb, 0x59, 0x5f, 0xb0, 0x9c, 0xa9, 0xa0, 0x51, 0x0b, 0xf5, 0x16, 0xeb, 0x7a, 0x75, 0x2c, 0xd7,\n      0x4f, 0xae, 0xd5, 0xe9, 0xe6, 0xe7, 0xad, 0xe8, 0x74, 0xd6, 0xf4, 0xea, 0xa8, 0x50, 0x58, 0xaf\n    ]\n\n  });\n\n  var Galois_1 = Galois;\n\n  /**\n   * Contains version pattern information.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Version = lite.extend(null, {\n\n    /**\n     * The version pattern block.\n     *\n     * @public\n     * @static\n     * @type {number[]}\n     * @memberof Version\n     */\n    BLOCK: [\n      0xc94, 0x5bc, 0xa99, 0x4d3, 0xbf6, 0x762, 0x847, 0x60d, 0x928, 0xb78, 0x45d, 0xa17, 0x532,\n      0x9a6, 0x683, 0x8c9, 0x7ec, 0xec4, 0x1e1, 0xfab, 0x08e, 0xc1a, 0x33f, 0xd75, 0x250, 0x9d5,\n      0x6f0, 0x8ba, 0x79f, 0xb0b, 0x42e, 0xa64, 0x541, 0xc69\n    ]\n\n  });\n\n  var Version_1 = Version;\n\n  /**\n   * Generates information for a QR code frame based on a specific value to be encoded.\n   *\n   * @param {Frame~Options} options - the options to be used\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Frame = lite.extend(function(options) {\n    var dataBlock, eccBlock, index, neccBlock1, neccBlock2;\n    var valueLength = options.value.length;\n\n    this._badness = [];\n    this._level = ErrorCorrection_1.LEVELS[options.level];\n    this._polynomial = [];\n    this._value = options.value;\n    this._version = 0;\n    this._stringBuffer = [];\n\n    while (this._version < 40) {\n      this._version++;\n\n      index = ((this._level - 1) * 4) + ((this._version - 1) * 16);\n\n      neccBlock1 = ErrorCorrection_1.BLOCKS[index++];\n      neccBlock2 = ErrorCorrection_1.BLOCKS[index++];\n      dataBlock = ErrorCorrection_1.BLOCKS[index++];\n      eccBlock = ErrorCorrection_1.BLOCKS[index];\n\n      index = (dataBlock * (neccBlock1 + neccBlock2)) + neccBlock2 - 3 + (this._version <= 9);\n\n      if (valueLength <= index) {\n        break;\n      }\n    }\n\n    this._dataBlock = dataBlock;\n    this._eccBlock = eccBlock;\n    this._neccBlock1 = neccBlock1;\n    this._neccBlock2 = neccBlock2;\n\n    /**\n     * The data width is based on version.\n     *\n     * @public\n     * @type {number}\n     * @memberof Frame#\n     */\n    // FIXME: Ensure that it fits instead of being truncated.\n    var width = this.width = 17 + (4 * this._version);\n\n    /**\n     * The image buffer.\n     *\n     * @public\n     * @type {number[]}\n     * @memberof Frame#\n     */\n    this.buffer = Frame._createArray(width * width);\n\n    this._ecc = Frame._createArray(dataBlock + ((dataBlock + eccBlock) * (neccBlock1 + neccBlock2)) + neccBlock2);\n    this._mask = Frame._createArray(((width * (width + 1)) + 1) / 2);\n\n    this._insertFinders();\n    this._insertAlignments();\n\n    // Insert single foreground cell.\n    this.buffer[8 + (width * (width - 8))] = 1;\n\n    this._insertTimingGap();\n    this._reverseMask();\n    this._insertTimingRowAndColumn();\n    this._insertVersion();\n    this._syncMask();\n    this._convertBitStream(valueLength);\n    this._calculatePolynomial();\n    this._appendEccToData();\n    this._interleaveBlocks();\n    this._pack();\n    this._finish();\n  }, {\n\n    _addAlignment: function(x, y) {\n      var i;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      buffer[x + (width * y)] = 1;\n\n      for (i = -2; i < 2; i++) {\n        buffer[x + i + (width * (y - 2))] = 1;\n        buffer[x - 2 + (width * (y + i + 1))] = 1;\n        buffer[x + 2 + (width * (y + i))] = 1;\n        buffer[x + i + 1 + (width * (y + 2))] = 1;\n      }\n\n      for (i = 0; i < 2; i++) {\n        this._setMask(x - 1, y + i);\n        this._setMask(x + 1, y - i);\n        this._setMask(x - i, y - 1);\n        this._setMask(x + i, y + 1);\n      }\n    },\n\n    _appendData: function(data, dataLength, ecc, eccLength) {\n      var bit, i, j;\n      var polynomial = this._polynomial;\n      var stringBuffer = this._stringBuffer;\n\n      for (i = 0; i < eccLength; i++) {\n        stringBuffer[ecc + i] = 0;\n      }\n\n      for (i = 0; i < dataLength; i++) {\n        bit = Galois_1.LOG[stringBuffer[data + i] ^ stringBuffer[ecc]];\n\n        if (bit !== 255) {\n          for (j = 1; j < eccLength; j++) {\n            stringBuffer[ecc + j - 1] = stringBuffer[ecc + j] ^\n              Galois_1.EXPONENT[Frame._modN(bit + polynomial[eccLength - j])];\n          }\n        } else {\n          for (j = ecc; j < ecc + eccLength; j++) {\n            stringBuffer[j] = stringBuffer[j + 1];\n          }\n        }\n\n        stringBuffer[ecc + eccLength - 1] = bit === 255 ? 0 : Galois_1.EXPONENT[Frame._modN(bit + polynomial[0])];\n      }\n    },\n\n    _appendEccToData: function() {\n      var i;\n      var data = 0;\n      var dataBlock = this._dataBlock;\n      var ecc = this._calculateMaxLength();\n      var eccBlock = this._eccBlock;\n\n      for (i = 0; i < this._neccBlock1; i++) {\n        this._appendData(data, dataBlock, ecc, eccBlock);\n\n        data += dataBlock;\n        ecc += eccBlock;\n      }\n\n      for (i = 0; i < this._neccBlock2; i++) {\n        this._appendData(data, dataBlock + 1, ecc, eccBlock);\n\n        data += dataBlock + 1;\n        ecc += eccBlock;\n      }\n    },\n\n    _applyMask: function(mask) {\n      var r3x, r3y, x, y;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      switch (mask) {\n      case 0:\n        for (y = 0; y < width; y++) {\n          for (x = 0; x < width; x++) {\n            if (!((x + y) & 1) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 1:\n        for (y = 0; y < width; y++) {\n          for (x = 0; x < width; x++) {\n            if (!(y & 1) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 2:\n        for (y = 0; y < width; y++) {\n          for (r3x = 0, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!r3x && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 3:\n        for (r3y = 0, y = 0; y < width; y++, r3y++) {\n          if (r3y === 3) {\n            r3y = 0;\n          }\n\n          for (r3x = r3y, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!r3x && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 4:\n        for (y = 0; y < width; y++) {\n          for (r3x = 0, r3y = (y >> 1) & 1, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n              r3y = !r3y;\n            }\n\n            if (!r3y && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 5:\n        for (r3y = 0, y = 0; y < width; y++, r3y++) {\n          if (r3y === 3) {\n            r3y = 0;\n          }\n\n          for (r3x = 0, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!((x & y & 1) + !(!r3x | !r3y)) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 6:\n        for (r3y = 0, y = 0; y < width; y++, r3y++) {\n          if (r3y === 3) {\n            r3y = 0;\n          }\n\n          for (r3x = 0, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!((x & y & 1) + (r3x && r3x === r3y) & 1) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      case 7:\n        for (r3y = 0, y = 0; y < width; y++, r3y++) {\n          if (r3y === 3) {\n            r3y = 0;\n          }\n\n          for (r3x = 0, x = 0; x < width; x++, r3x++) {\n            if (r3x === 3) {\n              r3x = 0;\n            }\n\n            if (!((r3x && r3x === r3y) + (x + y & 1) & 1) && !this._isMasked(x, y)) {\n              buffer[x + (y * width)] ^= 1;\n            }\n          }\n        }\n\n        break;\n      }\n    },\n\n    _calculateMaxLength: function() {\n      return (this._dataBlock * (this._neccBlock1 + this._neccBlock2)) + this._neccBlock2;\n    },\n\n    _calculatePolynomial: function() {\n      var i, j;\n      var eccBlock = this._eccBlock;\n      var polynomial = this._polynomial;\n\n      polynomial[0] = 1;\n\n      for (i = 0; i < eccBlock; i++) {\n        polynomial[i + 1] = 1;\n\n        for (j = i; j > 0; j--) {\n          polynomial[j] = polynomial[j] ? polynomial[j - 1] ^\n            Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[j]] + i)] : polynomial[j - 1];\n        }\n\n        polynomial[0] = Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[0]] + i)];\n      }\n\n      // Use logs for generator polynomial to save calculation step.\n      for (i = 0; i <= eccBlock; i++) {\n        polynomial[i] = Galois_1.LOG[polynomial[i]];\n      }\n    },\n\n    _checkBadness: function() {\n      var b, b1, h, x, y;\n      var bad = 0;\n      var badness = this._badness;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      // Blocks of same colour.\n      for (y = 0; y < width - 1; y++) {\n        for (x = 0; x < width - 1; x++) {\n          // All foreground colour.\n          if ((buffer[x + (width * y)] &&\n            buffer[x + 1 + (width * y)] &&\n            buffer[x + (width * (y + 1))] &&\n            buffer[x + 1 + (width * (y + 1))]) ||\n            // All background colour.\n            !(buffer[x + (width * y)] ||\n            buffer[x + 1 + (width * y)] ||\n            buffer[x + (width * (y + 1))] ||\n            buffer[x + 1 + (width * (y + 1))])) {\n            bad += Frame.N2;\n          }\n        }\n      }\n\n      var bw = 0;\n\n      // X runs.\n      for (y = 0; y < width; y++) {\n        h = 0;\n\n        badness[0] = 0;\n\n        for (b = 0, x = 0; x < width; x++) {\n          b1 = buffer[x + (width * y)];\n\n          if (b === b1) {\n            badness[h]++;\n          } else {\n            badness[++h] = 1;\n          }\n\n          b = b1;\n          bw += b ? 1 : -1;\n        }\n\n        bad += this._getBadness(h);\n      }\n\n      if (bw < 0) {\n        bw = -bw;\n      }\n\n      var count = 0;\n      var big = bw;\n      big += big << 2;\n      big <<= 1;\n\n      while (big > width * width) {\n        big -= width * width;\n        count++;\n      }\n\n      bad += count * Frame.N4;\n\n      // Y runs.\n      for (x = 0; x < width; x++) {\n        h = 0;\n\n        badness[0] = 0;\n\n        for (b = 0, y = 0; y < width; y++) {\n          b1 = buffer[x + (width * y)];\n\n          if (b === b1) {\n            badness[h]++;\n          } else {\n            badness[++h] = 1;\n          }\n\n          b = b1;\n        }\n\n        bad += this._getBadness(h);\n      }\n\n      return bad;\n    },\n\n    _convertBitStream: function(length) {\n      var bit, i;\n      var ecc = this._ecc;\n      var version = this._version;\n\n      // Convert string to bit stream. 8-bit data to QR-coded 8-bit data (numeric, alphanumeric, or kanji not supported).\n      for (i = 0; i < length; i++) {\n        ecc[i] = this._value.charCodeAt(i);\n      }\n\n      var stringBuffer = this._stringBuffer = ecc.slice();\n      var maxLength = this._calculateMaxLength();\n\n      if (length >= maxLength - 2) {\n        length = maxLength - 2;\n\n        if (version > 9) {\n          length--;\n        }\n      }\n\n      // Shift and re-pack to insert length prefix.\n      var index = length;\n\n      if (version > 9) {\n        stringBuffer[index + 2] = 0;\n        stringBuffer[index + 3] = 0;\n\n        while (index--) {\n          bit = stringBuffer[index];\n\n          stringBuffer[index + 3] |= 255 & (bit << 4);\n          stringBuffer[index + 2] = bit >> 4;\n        }\n\n        stringBuffer[2] |= 255 & (length << 4);\n        stringBuffer[1] = length >> 4;\n        stringBuffer[0] = 0x40 | (length >> 12);\n      } else {\n        stringBuffer[index + 1] = 0;\n        stringBuffer[index + 2] = 0;\n\n        while (index--) {\n          bit = stringBuffer[index];\n\n          stringBuffer[index + 2] |= 255 & (bit << 4);\n          stringBuffer[index + 1] = bit >> 4;\n        }\n\n        stringBuffer[1] |= 255 & (length << 4);\n        stringBuffer[0] = 0x40 | (length >> 4);\n      }\n\n      // Fill to end with pad pattern.\n      index = length + 3 - (version < 10);\n\n      while (index < maxLength) {\n        stringBuffer[index++] = 0xec;\n        stringBuffer[index++] = 0x11;\n      }\n    },\n\n    _getBadness: function(length) {\n      var i;\n      var badRuns = 0;\n      var badness = this._badness;\n\n      for (i = 0; i <= length; i++) {\n        if (badness[i] >= 5) {\n          badRuns += Frame.N1 + badness[i] - 5;\n        }\n      }\n\n      // FBFFFBF as in finder.\n      for (i = 3; i < length - 1; i += 2) {\n        if (badness[i - 2] === badness[i + 2] &&\n          badness[i + 2] === badness[i - 1] &&\n          badness[i - 1] === badness[i + 1] &&\n          badness[i - 1] * 3 === badness[i] &&\n          // Background around the foreground pattern? Not part of the specs.\n          (badness[i - 3] === 0 || i + 3 > length ||\n          badness[i - 3] * 3 >= badness[i] * 4 ||\n          badness[i + 3] * 3 >= badness[i] * 4)) {\n          badRuns += Frame.N3;\n        }\n      }\n\n      return badRuns;\n    },\n\n    _finish: function() {\n      // Save pre-mask copy of frame.\n      this._stringBuffer = this.buffer.slice();\n\n      var currentMask, i;\n      var bit = 0;\n      var mask = 30000;\n\n      /*\n       * Using for instead of while since in original Arduino code if an early mask was \"good enough\" it wouldn't try for\n       * a better one since they get more complex and take longer.\n       */\n      for (i = 0; i < 8; i++) {\n        // Returns foreground-background imbalance.\n        this._applyMask(i);\n\n        currentMask = this._checkBadness();\n\n        // Is current mask better than previous best?\n        if (currentMask < mask) {\n          mask = currentMask;\n          bit = i;\n        }\n\n        // Don't increment \"i\" to a void redoing mask.\n        if (bit === 7) {\n          break;\n        }\n\n        // Reset for next pass.\n        this.buffer = this._stringBuffer.slice();\n      }\n\n      // Redo best mask as none were \"good enough\" (i.e. last wasn't bit).\n      if (bit !== i) {\n        this._applyMask(bit);\n      }\n\n      // Add in final mask/ECC level bytes.\n      mask = ErrorCorrection_1.FINAL_FORMAT[bit + (this._level - 1 << 3)];\n\n      var buffer = this.buffer;\n      var width = this.width;\n\n      // Low byte.\n      for (i = 0; i < 8; i++, mask >>= 1) {\n        if (mask & 1) {\n          buffer[width - 1 - i + (width * 8)] = 1;\n\n          if (i < 6) {\n            buffer[8 + (width * i)] = 1;\n          } else {\n            buffer[8 + (width * (i + 1))] = 1;\n          }\n        }\n      }\n\n      // High byte.\n      for (i = 0; i < 7; i++, mask >>= 1) {\n        if (mask & 1) {\n          buffer[8 + (width * (width - 7 + i))] = 1;\n\n          if (i) {\n            buffer[6 - i + (width * 8)] = 1;\n          } else {\n            buffer[7 + (width * 8)] = 1;\n          }\n        }\n      }\n    },\n\n    _interleaveBlocks: function() {\n      var i, j;\n      var dataBlock = this._dataBlock;\n      var ecc = this._ecc;\n      var eccBlock = this._eccBlock;\n      var k = 0;\n      var maxLength = this._calculateMaxLength();\n      var neccBlock1 = this._neccBlock1;\n      var neccBlock2 = this._neccBlock2;\n      var stringBuffer = this._stringBuffer;\n\n      for (i = 0; i < dataBlock; i++) {\n        for (j = 0; j < neccBlock1; j++) {\n          ecc[k++] = stringBuffer[i + (j * dataBlock)];\n        }\n\n        for (j = 0; j < neccBlock2; j++) {\n          ecc[k++] = stringBuffer[(neccBlock1 * dataBlock) + i + (j * (dataBlock + 1))];\n        }\n      }\n\n      for (j = 0; j < neccBlock2; j++) {\n        ecc[k++] = stringBuffer[(neccBlock1 * dataBlock) + i + (j * (dataBlock + 1))];\n      }\n\n      for (i = 0; i < eccBlock; i++) {\n        for (j = 0; j < neccBlock1 + neccBlock2; j++) {\n          ecc[k++] = stringBuffer[maxLength + i + (j * eccBlock)];\n        }\n      }\n\n      this._stringBuffer = ecc;\n    },\n\n    _insertAlignments: function() {\n      var i, x, y;\n      var version = this._version;\n      var width = this.width;\n\n      if (version > 1) {\n        i = Alignment_1.BLOCK[version];\n        y = width - 7;\n\n        for (;;) {\n          x = width - 7;\n\n          while (x > i - 3) {\n            this._addAlignment(x, y);\n\n            if (x < i) {\n              break;\n            }\n\n            x -= i;\n          }\n\n          if (y <= i + 9) {\n            break;\n          }\n\n          y -= i;\n\n          this._addAlignment(6, y);\n          this._addAlignment(y, 6);\n        }\n      }\n    },\n\n    _insertFinders: function() {\n      var i, j, x, y;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      for (i = 0; i < 3; i++) {\n        j = 0;\n        y = 0;\n\n        if (i === 1) {\n          j = width - 7;\n        }\n        if (i === 2) {\n          y = width - 7;\n        }\n\n        buffer[y + 3 + (width * (j + 3))] = 1;\n\n        for (x = 0; x < 6; x++) {\n          buffer[y + x + (width * j)] = 1;\n          buffer[y + (width * (j + x + 1))] = 1;\n          buffer[y + 6 + (width * (j + x))] = 1;\n          buffer[y + x + 1 + (width * (j + 6))] = 1;\n        }\n\n        for (x = 1; x < 5; x++) {\n          this._setMask(y + x, j + 1);\n          this._setMask(y + 1, j + x + 1);\n          this._setMask(y + 5, j + x);\n          this._setMask(y + x + 1, j + 5);\n        }\n\n        for (x = 2; x < 4; x++) {\n          buffer[y + x + (width * (j + 2))] = 1;\n          buffer[y + 2 + (width * (j + x + 1))] = 1;\n          buffer[y + 4 + (width * (j + x))] = 1;\n          buffer[y + x + 1 + (width * (j + 4))] = 1;\n        }\n      }\n    },\n\n    _insertTimingGap: function() {\n      var x, y;\n      var width = this.width;\n\n      for (y = 0; y < 7; y++) {\n        this._setMask(7, y);\n        this._setMask(width - 8, y);\n        this._setMask(7, y + width - 7);\n      }\n\n      for (x = 0; x < 8; x++) {\n        this._setMask(x, 7);\n        this._setMask(x + width - 8, 7);\n        this._setMask(x, width - 8);\n      }\n    },\n\n    _insertTimingRowAndColumn: function() {\n      var x;\n      var buffer = this.buffer;\n      var width = this.width;\n\n      for (x = 0; x < width - 14; x++) {\n        if (x & 1) {\n          this._setMask(8 + x, 6);\n          this._setMask(6, 8 + x);\n        } else {\n          buffer[8 + x + (width * 6)] = 1;\n          buffer[6 + (width * (8 + x))] = 1;\n        }\n      }\n    },\n\n    _insertVersion: function() {\n      var i, j, x, y;\n      var buffer = this.buffer;\n      var version = this._version;\n      var width = this.width;\n\n      if (version > 6) {\n        i = Version_1.BLOCK[version - 7];\n        j = 17;\n\n        for (x = 0; x < 6; x++) {\n          for (y = 0; y < 3; y++, j--) {\n            if (1 & (j > 11 ? version >> j - 12 : i >> j)) {\n              buffer[5 - x + (width * (2 - y + width - 11))] = 1;\n              buffer[2 - y + width - 11 + (width * (5 - x))] = 1;\n            } else {\n              this._setMask(5 - x, 2 - y + width - 11);\n              this._setMask(2 - y + width - 11, 5 - x);\n            }\n          }\n        }\n      }\n    },\n\n    _isMasked: function(x, y) {\n      var bit = Frame._getMaskBit(x, y);\n\n      return this._mask[bit] === 1;\n    },\n\n    _pack: function() {\n      var bit, i, j;\n      var k = 1;\n      var v = 1;\n      var width = this.width;\n      var x = width - 1;\n      var y = width - 1;\n\n      // Interleaved data and ECC codes.\n      var length = ((this._dataBlock + this._eccBlock) * (this._neccBlock1 + this._neccBlock2)) + this._neccBlock2;\n\n      for (i = 0; i < length; i++) {\n        bit = this._stringBuffer[i];\n\n        for (j = 0; j < 8; j++, bit <<= 1) {\n          if (0x80 & bit) {\n            this.buffer[x + (width * y)] = 1;\n          }\n\n          // Find next fill position.\n          do {\n            if (v) {\n              x--;\n            } else {\n              x++;\n\n              if (k) {\n                if (y !== 0) {\n                  y--;\n                } else {\n                  x -= 2;\n                  k = !k;\n\n                  if (x === 6) {\n                    x--;\n                    y = 9;\n                  }\n                }\n              } else if (y !== width - 1) {\n                y++;\n              } else {\n                x -= 2;\n                k = !k;\n\n                if (x === 6) {\n                  x--;\n                  y -= 8;\n                }\n              }\n            }\n\n            v = !v;\n          } while (this._isMasked(x, y));\n        }\n      }\n    },\n\n    _reverseMask: function() {\n      var x, y;\n      var width = this.width;\n\n      for (x = 0; x < 9; x++) {\n        this._setMask(x, 8);\n      }\n\n      for (x = 0; x < 8; x++) {\n        this._setMask(x + width - 8, 8);\n        this._setMask(8, x);\n      }\n\n      for (y = 0; y < 7; y++) {\n        this._setMask(8, y + width - 7);\n      }\n    },\n\n    _setMask: function(x, y) {\n      var bit = Frame._getMaskBit(x, y);\n\n      this._mask[bit] = 1;\n    },\n\n    _syncMask: function() {\n      var x, y;\n      var width = this.width;\n\n      for (y = 0; y < width; y++) {\n        for (x = 0; x <= y; x++) {\n          if (this.buffer[x + (width * y)]) {\n            this._setMask(x, y);\n          }\n        }\n      }\n    }\n\n  }, {\n\n    _createArray: function(length) {\n      var i;\n      var array = [];\n\n      for (i = 0; i < length; i++) {\n        array[i] = 0;\n      }\n\n      return array;\n    },\n\n    _getMaskBit: function(x, y) {\n      var bit;\n\n      if (x > y) {\n        bit = x;\n        x = y;\n        y = bit;\n      }\n\n      bit = y;\n      bit += y * y;\n      bit >>= 1;\n      bit += x;\n\n      return bit;\n    },\n\n    _modN: function(x) {\n      while (x >= 255) {\n        x -= 255;\n        x = (x >> 8) + (x & 255);\n      }\n\n      return x;\n    },\n\n    // *Badness* coefficients.\n    N1: 3,\n    N2: 3,\n    N3: 40,\n    N4: 10\n\n  });\n\n  var Frame_1 = Frame;\n\n  /**\n   * The options used by {@link Frame}.\n   *\n   * @typedef {Object} Frame~Options\n   * @property {string} level - The ECC level to be used.\n   * @property {string} value - The value to be encoded.\n   */\n\n  /**\n   * An implementation of {@link Renderer} for working with <code>img</code> elements.\n   *\n   * This depends on {@link CanvasRenderer} being executed first as this implementation simply applies the data URL from\n   * the rendered <code>canvas</code> element as the <code>src</code> for the <code>img</code> element being rendered.\n   *\n   * @public\n   * @class\n   * @extends Renderer\n   */\n  var ImageRenderer = Renderer_1.extend({\n\n    /**\n     * @override\n     */\n    draw: function() {\n      this.element.src = this.qrious.toDataURL();\n    },\n\n    /**\n     * @override\n     */\n    reset: function() {\n      this.element.src = '';\n    },\n\n    /**\n     * @override\n     */\n    resize: function() {\n      var element = this.element;\n\n      element.width = element.height = this.qrious.size;\n    }\n\n  });\n\n  var ImageRenderer_1 = ImageRenderer;\n\n  /**\n   * Defines an available option while also configuring how values are applied to the target object.\n   *\n   * Optionally, a default value can be specified as well a value transformer for greater control over how the option\n   * value is applied.\n   *\n   * If no value transformer is specified, then any specified option will be applied directly. All values are maintained\n   * on the target object itself as a field using the option name prefixed with a single underscore.\n   *\n   * When an option is specified as modifiable, the {@link OptionManager} will be required to include a setter for the\n   * property that is defined on the target object that uses the option name.\n   *\n   * @param {string} name - the name to be used\n   * @param {boolean} [modifiable] - <code>true</code> if the property defined on target objects should include a setter;\n   * otherwise <code>false</code>\n   * @param {*} [defaultValue] - the default value to be used\n   * @param {Option~ValueTransformer} [valueTransformer] - the value transformer to be used\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Option = lite.extend(function(name, modifiable, defaultValue, valueTransformer) {\n    /**\n     * The name for this {@link Option}.\n     *\n     * @public\n     * @type {string}\n     * @memberof Option#\n     */\n    this.name = name;\n\n    /**\n     * Whether a setter should be included on the property defined on target objects for this {@link Option}.\n     *\n     * @public\n     * @type {boolean}\n     * @memberof Option#\n     */\n    this.modifiable = Boolean(modifiable);\n\n    /**\n     * The default value for this {@link Option}.\n     *\n     * @public\n     * @type {*}\n     * @memberof Option#\n     */\n    this.defaultValue = defaultValue;\n\n    this._valueTransformer = valueTransformer;\n  }, {\n\n    /**\n     * Transforms the specified <code>value</code> so that it can be applied for this {@link Option}.\n     *\n     * If a value transformer has been specified for this {@link Option}, it will be called upon to transform\n     * <code>value</code>. Otherwise, <code>value</code> will be returned directly.\n     *\n     * @param {*} value - the value to be transformed\n     * @return {*} The transformed value or <code>value</code> if no value transformer is specified.\n     * @public\n     * @memberof Option#\n     */\n    transform: function(value) {\n      var transformer = this._valueTransformer;\n      if (typeof transformer === 'function') {\n        return transformer(value, this);\n      }\n\n      return value;\n    }\n\n  });\n\n  var Option_1 = Option;\n\n  /**\n   * Returns a transformed value for the specified <code>value</code> to be applied for the <code>option</code> provided.\n   *\n   * @callback Option~ValueTransformer\n   * @param {*} value - the value to be transformed\n   * @param {Option} option - the {@link Option} for which <code>value</code> is being transformed\n   * @return {*} The transform value.\n   */\n\n  /**\n   * Contains utility methods that are useful throughout the library.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Utilities = lite.extend(null, {\n\n    /**\n     * Returns the absolute value of a given number.\n     *\n     * This method is simply a convenient shorthand for <code>Math.abs</code> while ensuring that nulls are returned as\n     * <code>null</code> instead of zero.\n     *\n     * @param {number} value - the number whose absolute value is to be returned\n     * @return {number} The absolute value of <code>value</code> or <code>null</code> if <code>value</code> is\n     * <code>null</code>.\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    abs: function(value) {\n      return value != null ? Math.abs(value) : null;\n    },\n\n    /**\n     * Returns whether the specified <code>object</code> has a property with the specified <code>name</code> as an own\n     * (not inherited) property.\n     *\n     * @param {Object} object - the object on which the property is to be checked\n     * @param {string} name - the name of the property to be checked\n     * @return {boolean} <code>true</code> if <code>object</code> has an own property with <code>name</code>.\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    hasOwn: function(object, name) {\n      return Object.prototype.hasOwnProperty.call(object, name);\n    },\n\n    /**\n     * A non-operation method that does absolutely nothing.\n     *\n     * @return {void}\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    noop: function() {},\n\n    /**\n     * Transforms the specified <code>string</code> to upper case while remaining null-safe.\n     *\n     * @param {string} string - the string to be transformed to upper case\n     * @return {string} <code>string</code> transformed to upper case if <code>string</code> is not <code>null</code>.\n     * @public\n     * @static\n     * @memberof Utilities\n     */\n    toUpperCase: function(string) {\n      return string != null ? string.toUpperCase() : null;\n    }\n\n  });\n\n  var Utilities_1 = Utilities;\n\n  /**\n   * Manages multiple {@link Option} instances that are intended to be used by multiple implementations.\n   *\n   * Although the option definitions are shared between targets, the values are maintained on the targets themselves.\n   *\n   * @param {Option[]} options - the options to be used\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var OptionManager = lite.extend(function(options) {\n    /**\n     * The available options for this {@link OptionManager}.\n     *\n     * @public\n     * @type {Object.<string, Option>}\n     * @memberof OptionManager#\n     */\n    this.options = {};\n\n    options.forEach(function(option) {\n      this.options[option.name] = option;\n    }, this);\n  }, {\n\n    /**\n     * Returns whether an option with the specified <code>name</code> is available.\n     *\n     * @param {string} name - the name of the {@link Option} whose existence is to be checked\n     * @return {boolean} <code>true</code> if an {@link Option} exists with <code>name</code>; otherwise\n     * <code>false</code>.\n     * @public\n     * @memberof OptionManager#\n     */\n    exists: function(name) {\n      return this.options[name] != null;\n    },\n\n    /**\n     * Returns the value of the option with the specified <code>name</code> on the <code>target</code> object provided.\n     *\n     * @param {string} name - the name of the {@link Option} whose value on <code>target</code> is to be returned\n     * @param {Object} target - the object from which the value of the named {@link Option} is to be returned\n     * @return {*} The value of the {@link Option} with <code>name</code> on <code>target</code>.\n     * @public\n     * @memberof OptionManager#\n     */\n    get: function(name, target) {\n      return OptionManager._get(this.options[name], target);\n    },\n\n    /**\n     * Returns a copy of all of the available options on the <code>target</code> object provided.\n     *\n     * @param {Object} target - the object from which the option name/value pairs are to be returned\n     * @return {Object.<string, *>} A hash containing the name/value pairs of all options on <code>target</code>.\n     * @public\n     * @memberof OptionManager#\n     */\n    getAll: function(target) {\n      var name;\n      var options = this.options;\n      var result = {};\n\n      for (name in options) {\n        if (Utilities_1.hasOwn(options, name)) {\n          result[name] = OptionManager._get(options[name], target);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Initializes the available options for the <code>target</code> object provided and then applies the initial values\n     * within the speciifed <code>options</code>.\n     *\n     * This method will throw an error if any of the names within <code>options</code> does not match an available option.\n     *\n     * This involves setting the default values and defining properties for all of the available options on\n     * <code>target</code> before finally calling {@link OptionMananger#setAll} with <code>options</code> and\n     * <code>target</code>. Any options that are configured to be modifiable will have a setter included in their defined\n     * property that will allow its corresponding value to be modified.\n     *\n     * If a change handler is specified, it will be called whenever the value changes on <code>target</code> for a\n     * modifiable option, but only when done so via the defined property's setter.\n     *\n     * @param {Object.<string, *>} options - the name/value pairs of the initial options to be set\n     * @param {Object} target - the object on which the options are to be initialized\n     * @param {Function} [changeHandler] - the function to be called whenever the value of an modifiable option changes on\n     * <code>target</code>\n     * @return {void}\n     * @throws {Error} If <code>options</code> contains an invalid option name.\n     * @public\n     * @memberof OptionManager#\n     */\n    init: function(options, target, changeHandler) {\n      if (typeof changeHandler !== 'function') {\n        changeHandler = Utilities_1.noop;\n      }\n\n      var name, option;\n\n      for (name in this.options) {\n        if (Utilities_1.hasOwn(this.options, name)) {\n          option = this.options[name];\n\n          OptionManager._set(option, option.defaultValue, target);\n          OptionManager._createAccessor(option, target, changeHandler);\n        }\n      }\n\n      this._setAll(options, target, true);\n    },\n\n    /**\n     * Sets the value of the option with the specified <code>name</code> on the <code>target</code> object provided to\n     * <code>value</code>.\n     *\n     * This method will throw an error if <code>name</code> does not match an available option or matches an option that\n     * cannot be modified.\n     *\n     * If <code>value</code> is <code>null</code> and the {@link Option} has a default value configured, then that default\n     * value will be used instead. If the {@link Option} also has a value transformer configured, it will be used to\n     * transform whichever value was determined to be used.\n     *\n     * This method returns whether the value of the underlying field on <code>target</code> was changed as a result.\n     *\n     * @param {string} name - the name of the {@link Option} whose value is to be set\n     * @param {*} value - the value to be set for the named {@link Option} on <code>target</code>\n     * @param {Object} target - the object on which <code>value</code> is to be set for the named {@link Option}\n     * @return {boolean} <code>true</code> if the underlying field on <code>target</code> was changed; otherwise\n     * <code>false</code>.\n     * @throws {Error} If <code>name</code> is invalid or is for an option that cannot be modified.\n     * @public\n     * @memberof OptionManager#\n     */\n    set: function(name, value, target) {\n      return this._set(name, value, target);\n    },\n\n    /**\n     * Sets all of the specified <code>options</code> on the <code>target</code> object provided to their corresponding\n     * values.\n     *\n     * This method will throw an error if any of the names within <code>options</code> does not match an available option\n     * or matches an option that cannot be modified.\n     *\n     * If any value within <code>options</code> is <code>null</code> and the corresponding {@link Option} has a default\n     * value configured, then that default value will be used instead. If an {@link Option} also has a value transformer\n     * configured, it will be used to transform whichever value was determined to be used.\n     *\n     * This method returns whether the value for any of the underlying fields on <code>target</code> were changed as a\n     * result.\n     *\n     * @param {Object.<string, *>} options - the name/value pairs of options to be set\n     * @param {Object} target - the object on which the options are to be set\n     * @return {boolean} <code>true</code> if any of the underlying fields on <code>target</code> were changed; otherwise\n     * <code>false</code>.\n     * @throws {Error} If <code>options</code> contains an invalid option name or an option that cannot be modiifed.\n     * @public\n     * @memberof OptionManager#\n     */\n    setAll: function(options, target) {\n      return this._setAll(options, target);\n    },\n\n    _set: function(name, value, target, allowUnmodifiable) {\n      var option = this.options[name];\n      if (!option) {\n        throw new Error('Invalid option: ' + name);\n      }\n      if (!option.modifiable && !allowUnmodifiable) {\n        throw new Error('Option cannot be modified: ' + name);\n      }\n\n      return OptionManager._set(option, value, target);\n    },\n\n    _setAll: function(options, target, allowUnmodifiable) {\n      if (!options) {\n        return false;\n      }\n\n      var name;\n      var changed = false;\n\n      for (name in options) {\n        if (Utilities_1.hasOwn(options, name) && this._set(name, options[name], target, allowUnmodifiable)) {\n          changed = true;\n        }\n      }\n\n      return changed;\n    }\n\n  }, {\n\n    _createAccessor: function(option, target, changeHandler) {\n      var descriptor = {\n        get: function() {\n          return OptionManager._get(option, target);\n        }\n      };\n\n      if (option.modifiable) {\n        descriptor.set = function(value) {\n          if (OptionManager._set(option, value, target)) {\n            changeHandler(value, option);\n          }\n        };\n      }\n\n      Object.defineProperty(target, option.name, descriptor);\n    },\n\n    _get: function(option, target) {\n      return target['_' + option.name];\n    },\n\n    _set: function(option, value, target) {\n      var fieldName = '_' + option.name;\n      var oldValue = target[fieldName];\n      var newValue = option.transform(value != null ? value : option.defaultValue);\n\n      target[fieldName] = newValue;\n\n      return newValue !== oldValue;\n    }\n\n  });\n\n  var OptionManager_1 = OptionManager;\n\n  /**\n   * Called whenever the value of a modifiable {@link Option} is changed on a target object via the defined property's\n   * setter.\n   *\n   * @callback OptionManager~ChangeHandler\n   * @param {*} value - the new value for <code>option</code> on the target object\n   * @param {Option} option - the modifable {@link Option} whose value has changed on the target object.\n   * @return {void}\n   */\n\n  /**\n   * A basic manager for {@link Service} implementations that are mapped to simple names.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var ServiceManager = lite.extend(function() {\n    this._services = {};\n  }, {\n\n    /**\n     * Returns the {@link Service} being managed with the specified <code>name</code>.\n     *\n     * @param {string} name - the name of the {@link Service} to be returned\n     * @return {Service} The {@link Service} is being managed with <code>name</code>.\n     * @throws {Error} If no {@link Service} is being managed with <code>name</code>.\n     * @public\n     * @memberof ServiceManager#\n     */\n    getService: function(name) {\n      var service = this._services[name];\n      if (!service) {\n        throw new Error('Service is not being managed with name: ' + name);\n      }\n\n      return service;\n    },\n\n    /**\n     * Sets the {@link Service} implementation to be managed for the specified <code>name</code> to the\n     * <code>service</code> provided.\n     *\n     * @param {string} name - the name of the {@link Service} to be managed with <code>name</code>\n     * @param {Service} service - the {@link Service} implementation to be managed\n     * @return {void}\n     * @throws {Error} If a {@link Service} is already being managed with the same <code>name</code>.\n     * @public\n     * @memberof ServiceManager#\n     */\n    setService: function(name, service) {\n      if (this._services[name]) {\n        throw new Error('Service is already managed with name: ' + name);\n      }\n\n      if (service) {\n        this._services[name] = service;\n      }\n    }\n\n  });\n\n  var ServiceManager_1 = ServiceManager;\n\n  var optionManager = new OptionManager_1([\n    new Option_1('background', true, 'white'),\n    new Option_1('backgroundAlpha', true, 1, Utilities_1.abs),\n    new Option_1('element'),\n    new Option_1('foreground', true, 'black'),\n    new Option_1('foregroundAlpha', true, 1, Utilities_1.abs),\n    new Option_1('level', true, 'L', Utilities_1.toUpperCase),\n    new Option_1('mime', true, 'image/png'),\n    new Option_1('padding', true, null, Utilities_1.abs),\n    new Option_1('size', true, 100, Utilities_1.abs),\n    new Option_1('value', true, '')\n  ]);\n  var serviceManager = new ServiceManager_1();\n\n  /**\n   * Enables configuration of a QR code generator which uses HTML5 <code>canvas</code> for rendering.\n   *\n   * @param {QRious~Options} [options] - the options to be used\n   * @throws {Error} If any <code>options</code> are invalid.\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var QRious = lite.extend(function(options) {\n    optionManager.init(options, this, this.update.bind(this));\n\n    var element = optionManager.get('element', this);\n    var elementService = serviceManager.getService('element');\n    var canvas = element && elementService.isCanvas(element) ? element : elementService.createCanvas();\n    var image = element && elementService.isImage(element) ? element : elementService.createImage();\n\n    this._canvasRenderer = new CanvasRenderer_1(this, canvas, true);\n    this._imageRenderer = new ImageRenderer_1(this, image, image === element);\n\n    this.update();\n  }, {\n\n    /**\n     * Returns all of the options configured for this {@link QRious}.\n     *\n     * Any changes made to the returned object will not be reflected in the options themselves or their corresponding\n     * underlying fields.\n     *\n     * @return {Object.<string, *>} A copy of the applied options.\n     * @public\n     * @memberof QRious#\n     */\n    get: function() {\n      return optionManager.getAll(this);\n    },\n\n    /**\n     * Sets all of the specified <code>options</code> and automatically updates this {@link QRious} if any of the\n     * underlying fields are changed as a result.\n     *\n     * This is the preferred method for updating multiple options at one time to avoid unnecessary updates between\n     * changes.\n     *\n     * @param {QRious~Options} options - the options to be set\n     * @return {void}\n     * @throws {Error} If any <code>options</code> are invalid or cannot be modified.\n     * @public\n     * @memberof QRious#\n     */\n    set: function(options) {\n      if (optionManager.setAll(options, this)) {\n        this.update();\n      }\n    },\n\n    /**\n     * Returns the image data URI for the generated QR code using the <code>mime</code> provided.\n     *\n     * @param {string} [mime] - the MIME type for the image\n     * @return {string} The image data URI for the QR code.\n     * @public\n     * @memberof QRious#\n     */\n    toDataURL: function(mime) {\n      return this.canvas.toDataURL(mime || this.mime);\n    },\n\n    /**\n     * Updates this {@link QRious} by generating a new {@link Frame} and re-rendering the QR code.\n     *\n     * @return {void}\n     * @protected\n     * @memberof QRious#\n     */\n    update: function() {\n      var frame = new Frame_1({\n        level: this.level,\n        value: this.value\n      });\n\n      this._canvasRenderer.render(frame);\n      this._imageRenderer.render(frame);\n    }\n\n  }, {\n\n    /**\n     * Configures the <code>service</code> provided to be used by all {@link QRious} instances.\n     *\n     * @param {Service} service - the {@link Service} to be configured\n     * @return {void}\n     * @throws {Error} If a {@link Service} has already been configured with the same name.\n     * @public\n     * @static\n     * @memberof QRious\n     */\n    use: function(service) {\n      serviceManager.setService(service.getName(), service);\n    }\n\n  });\n\n  Object.defineProperties(QRious.prototype, {\n\n    canvas: {\n      /**\n       * Returns the <code>canvas</code> element being used to render the QR code for this {@link QRious}.\n       *\n       * @return {*} The <code>canvas</code> element.\n       * @public\n       * @memberof QRious#\n       * @alias canvas\n       */\n      get: function() {\n        return this._canvasRenderer.getElement();\n      }\n    },\n\n    image: {\n      /**\n       * Returns the <code>img</code> element being used to render the QR code for this {@link QRious}.\n       *\n       * @return {*} The <code>img</code> element.\n       * @public\n       * @memberof QRious#\n       * @alias image\n       */\n      get: function() {\n        return this._imageRenderer.getElement();\n      }\n    }\n\n  });\n\n  var QRious_1$2 = QRious;\n\n  /**\n   * The options used by {@link QRious}.\n   *\n   * @typedef {Object} QRious~Options\n   * @property {string} [background=\"white\"] - The background color to be applied to the QR code.\n   * @property {number} [backgroundAlpha=1] - The background alpha to be applied to the QR code.\n   * @property {*} [element] - The element to be used to render the QR code which may either be an <code>canvas</code> or\n   * <code>img</code>. The element(s) will be created if needed.\n   * @property {string} [foreground=\"black\"] - The foreground color to be applied to the QR code.\n   * @property {number} [foregroundAlpha=1] - The foreground alpha to be applied to the QR code.\n   * @property {string} [level=\"L\"] - The error correction level to be applied to the QR code.\n   * @property {string} [mime=\"image/png\"] - The MIME type to be used to render the image for the QR code.\n   * @property {number} [padding] - The padding for the QR code in pixels.\n   * @property {number} [size=100] - The size of the QR code in pixels.\n   * @property {string} [value=\"\"] - The value to be encoded within the QR code.\n   */\n\n  var index = QRious_1$2;\n\n  /**\n   * Defines a service contract that must be met by all implementations.\n   *\n   * @public\n   * @class\n   * @extends Nevis\n   */\n  var Service = lite.extend({\n\n    /**\n     * Returns the name of this {@link Service}.\n     *\n     * @return {string} The service name.\n     * @public\n     * @abstract\n     * @memberof Service#\n     */\n    getName: function() {}\n\n  });\n\n  var Service_1 = Service;\n\n  /**\n   * A service for working with elements.\n   *\n   * @public\n   * @class\n   * @extends Service\n   */\n  var ElementService = Service_1.extend({\n\n    /**\n     * Creates an instance of a canvas element.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {*} The newly created canvas element.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    createCanvas: function() {},\n\n    /**\n     * Creates an instance of a image element.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @return {*} The newly created image element.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    createImage: function() {},\n\n    /**\n     * @override\n     */\n    getName: function() {\n      return 'element';\n    },\n\n    /**\n     * Returns whether the specified <code>element</code> is a canvas.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @param {*} element - the element to be checked\n     * @return {boolean} <code>true</code> if <code>element</code> is a canvas; otherwise <code>false</code>.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    isCanvas: function(element) {},\n\n    /**\n     * Returns whether the specified <code>element</code> is an image.\n     *\n     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n     *\n     * @param {*} element - the element to be checked\n     * @return {boolean} <code>true</code> if <code>element</code> is an image; otherwise <code>false</code>.\n     * @public\n     * @abstract\n     * @memberof ElementService#\n     */\n    isImage: function(element) {}\n\n  });\n\n  var ElementService_1 = ElementService;\n\n  /**\n   * An implementation of {@link ElementService} intended for use within a browser environment.\n   *\n   * @public\n   * @class\n   * @extends ElementService\n   */\n  var BrowserElementService = ElementService_1.extend({\n\n    /**\n     * @override\n     */\n    createCanvas: function() {\n      return document.createElement('canvas');\n    },\n\n    /**\n     * @override\n     */\n    createImage: function() {\n      return document.createElement('img');\n    },\n\n    /**\n     * @override\n     */\n    isCanvas: function(element) {\n      return element instanceof HTMLCanvasElement;\n    },\n\n    /**\n     * @override\n     */\n    isImage: function(element) {\n      return element instanceof HTMLImageElement;\n    }\n\n  });\n\n  var BrowserElementService_1 = BrowserElementService;\n\n  index.use(new BrowserElementService_1());\n\n  var QRious_1 = index;\n\n  return QRious_1;\n\n})));\n\n\n});\n\nvar index = {\n  props: {\n    /*\n     * The value of the qrcode.\n     */\n    value: {\n      type: String,\n      required: true\n    },\n\n    /*\n     * The options for the qrcode generator.\n     * {@link https://github.com/lindell/JsQrcode#options}\n     */\n    options: {\n      type: Object\n    },\n\n    /*\n     * The tag of the component root element.\n     */\n    tag: {\n      type: String,\n      default: 'canvas'\n    }\n  },\n\n  render: function render(createElement) {\n    return createElement(this.tag, this.$slots.default);\n  },\n\n\n  watch: {\n    /*\n     * Update qrcode when value change\n     */\n    value: function value() {\n      this.generate();\n    },\n\n\n    /*\n     * Update qrcode when options change\n     */\n    options: function options() {\n      this.generate();\n    }\n  },\n\n  mounted: function mounted() {\n    this.generate();\n  },\n\n\n  methods: {\n    /**\n     * Generate qrcode\n     */\n    generate: function generate() {\n      // eslint-disable-next-line\n      new qrious(Object.assign({\n        element: this.$el,\n        value: this.value\n      }, this.options));\n    }\n  }\n};\n\nreturn index;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@xkeshi/vue-qrcode/dist/vue-qrcode.js\n// module id = Ik4r\n// module chunks = 0","<template>\n    <Modal v-model=\"modal_preView\" :mask-closable=\"false\" @on-visible-change=\"onVisibleChange\" width=\"798\" :footerHide=\"true\">\n        <h2>预览-设置</h2>\n        <Row style=\"margin-top: 16px; margin-bottom: 16px\">\n            <Col span=\"12\">\n            <div class=\"preview-plan\">\n                <div class=\"preview-iframe\">\n                    <iframe :src=\"qrcodeAdderss\" width=\"100%\" height=\"100%\" frameborder=\"0\"></iframe>\n                </div>\n            </div>\n            <div style=\"text-align: center; margin-top: 6px;\">\n                <ButtonGroup shape=\"circle\">\n                    <Button ><Icon type=\"chevron-left\"></Icon>上一页</Button>\n                    <Button >下一页<Icon type=\"chevron-right\"></Icon></Button>\n                </ButtonGroup>\n            </div>\n            </Col>\n            <Col span=\"12\">\n            <div>\n                <h3>设置作品信息</h3>\n                <div>\n                    <Input style=\"margin-top: 6px\" v-model=\"theme.title\" :readonly=\"!getStatusEdit()\" placeholder=\"请输入标题...\" ></Input>\n                </div>\n                <br>\n                <div>\n                    <Input v-model=\"theme.description\" type=\"textarea\"  :readonly=\"!getStatusEdit()\" :autosize=\"{ minRows: 3, maxRows: 4 }\" placeholder=\"请输入简介...\" ></Input>\n                </div>\n                <br>\n\n                <div style=\"width: 100%; margin-top: 6px \">\n                    <Row>\n                        <Col style=\"text-align: center\" span=\"12\">\n                            <h3>手机扫码查看</h3>\n                            <qrcode :options=\"{ size: 164 }\" :value=\"qrcodeAdderss\" ></qrcode>\n                        </Col>\n                        <Col style=\"text-align: center\" span=\"12\">\n                            <h3>H5封面</h3>\n                            <div style=\"margin-top: 14px; \">\n                               <div class=\"theme-bg\">\n                                   <img  v-if=\"theme.themebg\" :src=\"baseHost + theme.themebg\" width=\"134\" height=\"134\" alt=\"\">\n                                   <div v-if=\"getStatusEdit()\" class=\"setting-change-bg\">\n                                       <Upload multiple\n                                               :action=\"uploadUrl + userinfo._id\"\n                                               name=\"uploadFile\"\n                                               :show-upload-list=\"false\"\n                                               :max-size=\"2048\"\n                                               :on-success=\"handleSuccess\"\n                                               :on-format-error=\"handleFormatError\"\n                                               :on-exceeded-size=\"handleMaxSize\">\n                                           <Button type=\"primary\" icon=\"ios-cloud-upload\">上传图片</Button>\n                                       </Upload>\n                                   </div>\n                               </div>\n                            </div>\n                        </Col>\n                    </Row>\n                    <div>\n                       <Row>\n                           <Col span=\"18\">\n                               <Input id=\"themeurlid\" type=\"textarea\" :autosize=\"{ minRows: 2, maxRows: 2 }\"\n                                      :value=\"qrcodeAdderss\" size=\"large\" readonly placeholder=\"显示url\"></Input>\n                           </Col>\n                           <Col span=\"6\"><Button @click=\"onCopyEvent\" style=\"line-height: 3rem;\">复制</Button></Col>\n                       </Row>\n                    </div>\n\n                   <div style=\" margin-top: 16px\">\n                       <Button type=\"primary\" v-if=\"$route.path === '/edit'\" @click=\"onSave\"                    >保存</Button>\n                       <Button type=\"primary\" v-if=\"$route.path === '/usertheme'\" @click=\"onToEditor\"           >编辑</Button>\n                       <Button type=\"primary\" v-if=\"getStatusEdit() && theme.status === 0\" @click=\"onToBuild\"   >发布</Button>\n                       <Button type=\"primary\" v-if=\"getStatusEdit()\" @click=\"onToDownload\"                      >下载</Button>\n                       <Button type=\"primary\" v-if=\"!getStatusEdit() || $route.path === '/usertheme'\"  @click=\"onUseTemplate\">使用模板</Button>\n                   </div>\n\n                </div>\n            </div>\n            </Col>\n        </Row>\n    </Modal>\n</template>\n\n<script>\n    import qrcode from '@xkeshi/vue-qrcode';\n    import * as config from '@/api/config'\n    export default {\n        name: \"preview-modal\",\n        components: {\n            qrcode,\n        },\n        props: {\n            value: { type: Boolean, default: false },\n            theme: { type: Object, default: {\n                    title: '',\n                    description: '',\n                    themebg: ''\n                }},\n            title: { type: String, default: \"title\" },\n            des: { type: String, default: 'descr', },\n            qurl: { type: String, default: '', }\n        },\n        data(){\n            return{\n                inputTile: this.title,\n                inputDes: this.des,\n                qrcodeAdderss: this.qurl,\n                modal_preView: this.preview,\n                baseHost: config.caryHost + '/',\n                uploadUrl: config.caryHost + 'api/edit/files/uploads?userid=',\n                isImgModal: false,\n            }\n        },\n        watch: {\n            value(val){\n                this.modal_preView = val;\n            },\n\n        },\n        computed:{\n            userinfo(){\n                let info = this.$store.state.user.userinfo\n                let ob = {}\n                if(info){\n                    ob = info\n                }else {\n                    ob = {\n                        _id: ''\n                    }\n                }\n                return ob\n            },\n\n            getThemebg(){\n                let bg = this.theme.themebg\n                if(bg === 'upload/all/img_default.png'){\n                    return ''\n                }\n                return bg || ''\n            }\n\n        },\n        created() {\n        },\n        mounted() {\n\n        },\n        methods: {\n\n            //获取是否可以编辑\n            getStatusEdit(){\n                if(this.$route.path === '/edit' || this.$route.path === '/usertheme'){\n                    return true\n                }else {\n                    return false\n                }\n            },\n\n            //弹出框更换状态\n            onVisibleChange(visible){\n                if(!visible){\n                    this.$emit('input', visible);\n                    this.qrcodeAdderss = ''\n                }else {\n                    this.qrcodeAdderss = this.baseHost + 'api/edit/preview/' + this.theme._id\n                }\n            },\n\n            onCopyEvent(){\n                let ele = document.getElementById(\"themeurlid\");\n                ele.getElementsByTagName(\"textarea\")[0].select()\n                document.execCommand(\"copy\");\n            },\n\n            //上传回调\n            handleSuccess (res, file) {\n                this.theme.themebg = res.body[0].url\n            },\n\n            handleFormatError (file) {\n                this.$Notice.warning({title: '文件格式不正确。', desc: '文件格式 ' + file.name + ' 不正确，请选择JPG或PNG.'});\n            },\n\n            handleMaxSize (file) {\n                this.$Notice.warning({title: '超出文件大小限制', desc: '文件  ' + file.name + ' 太大，不超过2M。'});\n            },\n\n            onSave(){\n                let pa = JSON.parse(JSON.stringify(this.theme))\n                this.$store.dispatch('saveTheme', pa).then(res => {\n                    // TODO 更新成功\n                    this.$Message.success('保存成功')\n                })\n            },\n\n            onToEditor(){\n                this.$store.dispatch('pageFindOne', this.theme._id).then(() => {\n                    this.$router.push({ path: '/edit', query: { itemId: this.theme._id }})\n                }).catch(err => {\n                    this.$Message.error('获取数据失败')\n                })\n            },\n\n            onToBuild(){\n                this.theme.status = 1\n                let pa = JSON.parse(JSON.stringify(this.theme))\n                this.$Spin.show();\n                this.$store.dispatch('saveTheme', pa).then(res => {\n                    // TODO 发布成功\n                    this.$Message.success('发布成功')\n                    this.$Spin.hide();\n                })\n            },\n\n            onToDownload(){\n                this.$Message.warning('正在努力开发')\n                window.location.href = this.baseHost + 'api/edit/thdownload/' + this.theme._id\n            },\n\n            onUseTemplate(){\n                if(this.userinfo._id){\n                    let useTheme = JSON.parse(JSON.stringify(this.theme))\n                    this.$store.commit('USE_CREATE_THEME', useTheme)\n                    this.$Spin.show();\n                    this.$store.dispatch('saveTheme', JSON.parse(JSON.stringify(this.$store.state.editor.editorTheme))).then((res) => {\n                        // todo 跳转到编辑页面\n                        this.$store.dispatch('pageFindOne', this.$store.state.editor.editorTheme._id).then(() => {\n                            this.$Spin.hide();\n                            this.$router.push({ path: '/edit', query: { itemId: this.$store.state.editor.editorTheme._id }})\n                        }).catch(err => {\n                            this.$Message.error('获取数据失败')\n                            this.$Spin.hide();\n                        })\n                    });\n                    this.$store.dispatch('useTheme', useTheme)\n                }else {\n                    this.$Message.warning('请先登录')\n                }\n            },\n\n            ontest(){\n                console.log(this.theme.path === '/edit');\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .preview-plan {\n        width:348px;\n        padding: 2px;\n        border: 1px solid #dddee1;\n        border-radius: 4px\n    }\n    .preview-iframe {\n        width: 342px;\n        height: 582px;\n        background: #fff\n    }\n\n    .setting-change-bg {\n        display: none;\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translate(-50%, -50%);\n    }\n    .theme-bg:hover .setting-change-bg {\n        display: block;\n    }\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/modals/PreviewSetModal.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Modal',{attrs:{\"mask-closable\":false,\"width\":\"798\",\"footerHide\":true},on:{\"on-visible-change\":_vm.onVisibleChange},model:{value:(_vm.modal_preView),callback:function ($$v) {_vm.modal_preView=$$v},expression:\"modal_preView\"}},[_c('h2',[_vm._v(\"预览-设置\")]),_vm._v(\" \"),_c('Row',{staticStyle:{\"margin-top\":\"16px\",\"margin-bottom\":\"16px\"}},[_c('Col',{attrs:{\"span\":\"12\"}},[_c('div',{staticClass:\"preview-plan\"},[_c('div',{staticClass:\"preview-iframe\"},[_c('iframe',{attrs:{\"src\":_vm.qrcodeAdderss,\"width\":\"100%\",\"height\":\"100%\",\"frameborder\":\"0\"}})])]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"center\",\"margin-top\":\"6px\"}},[_c('ButtonGroup',{attrs:{\"shape\":\"circle\"}},[_c('Button',[_c('Icon',{attrs:{\"type\":\"chevron-left\"}}),_vm._v(\"上一页\")],1),_vm._v(\" \"),_c('Button',[_vm._v(\"下一页\"),_c('Icon',{attrs:{\"type\":\"chevron-right\"}})],1)],1)],1)]),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"12\"}},[_c('div',[_c('h3',[_vm._v(\"设置作品信息\")]),_vm._v(\" \"),_c('div',[_c('Input',{staticStyle:{\"margin-top\":\"6px\"},attrs:{\"readonly\":!_vm.getStatusEdit(),\"placeholder\":\"请输入标题...\"},model:{value:(_vm.theme.title),callback:function ($$v) {_vm.$set(_vm.theme, \"title\", $$v)},expression:\"theme.title\"}})],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',[_c('Input',{attrs:{\"type\":\"textarea\",\"readonly\":!_vm.getStatusEdit(),\"autosize\":{ minRows: 3, maxRows: 4 },\"placeholder\":\"请输入简介...\"},model:{value:(_vm.theme.description),callback:function ($$v) {_vm.$set(_vm.theme, \"description\", $$v)},expression:\"theme.description\"}})],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"100%\",\"margin-top\":\"6px\"}},[_c('Row',[_c('Col',{staticStyle:{\"text-align\":\"center\"},attrs:{\"span\":\"12\"}},[_c('h3',[_vm._v(\"手机扫码查看\")]),_vm._v(\" \"),_c('qrcode',{attrs:{\"options\":{ size: 164 },\"value\":_vm.qrcodeAdderss}})],1),_vm._v(\" \"),_c('Col',{staticStyle:{\"text-align\":\"center\"},attrs:{\"span\":\"12\"}},[_c('h3',[_vm._v(\"H5封面\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"14px\"}},[_c('div',{staticClass:\"theme-bg\"},[(_vm.theme.themebg)?_c('img',{attrs:{\"src\":_vm.baseHost + _vm.theme.themebg,\"width\":\"134\",\"height\":\"134\",\"alt\":\"\"}}):_vm._e(),_vm._v(\" \"),(_vm.getStatusEdit())?_c('div',{staticClass:\"setting-change-bg\"},[_c('Upload',{attrs:{\"multiple\":\"\",\"action\":_vm.uploadUrl + _vm.userinfo._id,\"name\":\"uploadFile\",\"show-upload-list\":false,\"max-size\":2048,\"on-success\":_vm.handleSuccess,\"on-format-error\":_vm.handleFormatError,\"on-exceeded-size\":_vm.handleMaxSize}},[_c('Button',{attrs:{\"type\":\"primary\",\"icon\":\"ios-cloud-upload\"}},[_vm._v(\"上传图片\")])],1)],1):_vm._e()])])])],1),_vm._v(\" \"),_c('div',[_c('Row',[_c('Col',{attrs:{\"span\":\"18\"}},[_c('Input',{attrs:{\"id\":\"themeurlid\",\"type\":\"textarea\",\"autosize\":{ minRows: 2, maxRows: 2 },\"value\":_vm.qrcodeAdderss,\"size\":\"large\",\"readonly\":\"\",\"placeholder\":\"显示url\"}})],1),_vm._v(\" \"),_c('Col',{attrs:{\"span\":\"6\"}},[_c('Button',{staticStyle:{\"line-height\":\"3rem\"},on:{\"click\":_vm.onCopyEvent}},[_vm._v(\"复制\")])],1)],1)],1),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"16px\"}},[(_vm.$route.path === '/edit')?_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onSave}},[_vm._v(\"保存\")]):_vm._e(),_vm._v(\" \"),(_vm.$route.path === '/usertheme')?_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onToEditor}},[_vm._v(\"编辑\")]):_vm._e(),_vm._v(\" \"),(_vm.getStatusEdit() && _vm.theme.status === 0)?_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onToBuild}},[_vm._v(\"发布\")]):_vm._e(),_vm._v(\" \"),(_vm.getStatusEdit())?_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onToDownload}},[_vm._v(\"下载\")]):_vm._e(),_vm._v(\" \"),(!_vm.getStatusEdit() || _vm.$route.path === '/usertheme')?_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.onUseTemplate}},[_vm._v(\"使用模板\")]):_vm._e()],1)],1)])])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4c460ab6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/modals/PreviewSetModal.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4c460ab6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./PreviewSetModal.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./PreviewSetModal.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./PreviewSetModal.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4c460ab6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./PreviewSetModal.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4c460ab6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/modals/PreviewSetModal.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}